name: cicd-dbt
services:
  prod_postgres:
    image: postgres:17.0
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./infra/postgres/data/prod:/var/lib/postgresql/data     # Data created by the Postgres engine
      - ./infra/postgres/dump:/dump                             # Data to be restored on initialization
      - ./infra/postgres/init/prod:/docker-entrypoint-initdb.d  # Scripts to be executed on initialization
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "webshop"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 80s

  dev_postgres:
    image: postgres:17.0
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "2345:5432"
    volumes:
      - ./infra/postgres/data/dev:/var/lib/postgresql/data
      - ./infra/postgres/init/non-prod:/docker-entrypoint-initdb.d
    depends_on:
      prod_postgres:
        condition: service_healthy

  # gha_runner:
  #   image: myoung34/github-runner:latest
  #   restart: always
  #   environment:
  #     REPO_URL: "https://github.com/${REPO_URL}"
  #     RUNNER_NAME: ${RUNNER_NAME}
  #     RUNNER_TOKEN: ${RUNNER_TOKEN}
  #     RUNNER_WORKDIR: /tmp/runner/work
  #     CONFIGURED_ACTIONS_RUNNER_FILES_DIR: /runner/data
  #     RUNNER_SCOPE: repo
  #     LABELS: linux,x64,self-hosted
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./infra/gha_runner/tmp:/tmp/runner
  #     - ./infra/gha_runner/data:/runner/data
  #     - ./logs/gha_runner:/runner/data/_diag
